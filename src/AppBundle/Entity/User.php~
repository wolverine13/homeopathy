<?php
/**
 * Created by PhpStorm.
 * User: wolverine13
 * Date: 12.06.16
 * Time: 08:04
 */

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\EntityRepository;
use Symfony\Component\Validator\Constraints\Date;
use Doctrine\Common\Collections\ArrayCollection;

/**
 *  @ORM\Table(name="app_user")
 *  @ORM\Entity
 *  @ORM\HasLifecycleCallbacks
 */

class User
{
    /**
     *  @ORM\Column(type="integer")
     *  @ORM\Id
     *  @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    /**
     *  @ORM\Column(type="string",length=15,nullable=false)
     */
    private $f_name;
    /**
     *  @ORM\Column(type="string",length=15,nullable=false)
     */
    private $l_name;
    /**
     *  @ORM\Column(type="string",length=25,nullable=false,unique=true)
     */
    private $email;

    /**
     *  @ORM\Column(type="string",length=15,nullable=false,unique=true)
     */
    private  $username;
    /**
     * @ORM\Column(type="string",length=64)
     */
    private $password;
    /**
     * @ORM\ManyToOne(targetEntity="Role",inversedBy="users")
     * @ORM\JoinColumn(name="role",referencedColumnName="id")
     */
    private $role;
    /**
     * @ORM\Column(name="create_at",type="datetime", nullable=false)
     * @ORM\Version
     * @var \DateTime
     */
    private  $created;
    /**
     * @ORM\Column(name="mod_at",type="datetime", nullable=false)
     * @ORM\Version
     * @var \DateTime
     */
    private  $modified;
    /**
     * @ORM\OneToMany(targetEntity="Homeopathy",mappedBy="usr_id")
     */
    private $homeopathies;


    public function _contruct($username,$password,$role,$email)
    {
        $this->homeopathies = new ArrayCollection();
        $this->username = $username;
        $this->password = $password;
        $this->role = $role;
        $this->email=$email;
        $this->created =  new \DateTime();
        $this->modified = new \DateTime();
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set fName
     *
     * @param string $fName
     *
     * @return User
     */
    public function setFName($fName)
    {
        $this->f_name = $fName;

        return $this;
    }

    /**
     * Get fName
     *
     * @return string
     */
    public function getFName()
    {
        return $this->f_name;
    }

    /**
     * Set lName
     *
     * @param string $lName
     *
     * @return User
     */
    public function setLName($lName)
    {
        $this->l_name = $lName;

        return $this;
    }

    /**
     * Get lName
     *
     * @return string
     */
    public function getLName()
    {
        return $this->l_name;
    }

    /**
     * Set email
     *
     * @param string $email
     *
     * @return User
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set username
     *
     * @param string $username
     *
     * @return User
     */
    public function setUsername($username)
    {
        $this->username = $username;

        return $this;
    }

    /**
     * Get username
     *
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Set password
     *
     * @param string $password
     *
     * @return User
     */
    public function setPassword($password)
    {
        $this->password = $password;

        return $this;
    }

    /**
     * Get password
     *
     * @return string
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Set role
     *
     * @param integer $role
     *
     * @return User
     */
    public function setRole($role)
    {
        $this->role = $role;

        return $this;
    }

    /**
     * Get role
     *
     * @return integer
     */
    public function getRole()
    {
        return $this->role;
    }

    /**
     * Set created
     *
     * @param \DateTime $created
     *
     * @return User
     */
    public function setCreated($created)
    {
        $this->created = $created;

        return $this;
    }

    /**
     * Get created
     *
     * @return \DateTime
     */
    public function getCreated()
    {
        return $this->created;
    }

    /**
     * Set modified
     *
     * @param \DateTime $modified
     *
     * @return User
     */
    public function setModified($modified)
    {
        $this->modified = $modified;

        return $this;
    }

    /**
     * Get modified
     *
     * @return \DateTime
     */
    public function getModified()
    {
        return $this->modified;
    }
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->homeopathies = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Add homepopathy
     *
     * @param \AppBundle\Entity\Homeopathy $homepopathy
     *
     * @return User
     */
    public function addHomeopathy(\AppBundle\Entity\Homeopathy $homepopathy)
    {
        $this->homeopathies[] = $homepopathy;

        return $this;
    }

    /**
     * Remove homepopathy
     *
     * @param \AppBundle\Entity\Homeopathy $homepopathy
     */
    public function removeHomeopathy(\AppBundle\Entity\Homeopathy $homepopathy)
    {
        $this->homeopathies->removeElement($homepopathy);
    }

    /**
     * Get homepopathies
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getHomepopathies()
    {
        return $this->homeopathies;
    }

    /**
     * Get homeopathies
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getHomeopathies()
    {
        return $this->homeopathies;
    }
}
